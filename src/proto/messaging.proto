syntax = "proto3";

message Signature {
    message ECDSACompact {
        bytes bytes = 1; // compact representation [ R || S ], 64 bytes
        uint32 recovery = 2; // recovery bit
    }
    oneof union {
        ECDSACompact ecdsaCompact = 1;
    }
}

message PublicKey {
    message Secp256k1Uncompresed {
      bytes bytes = 1; // uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
    }
    uint64 timestamp = 1;
    optional Signature signature = 2;
    oneof union {
        Secp256k1Uncompresed secp256k1Uncompressed = 3;
    }
}

message PrivateKey {
    message Secp256k1 {
        bytes bytes = 1; // D big-endian, 32 bytes
    }
    uint64 timestamp = 1;
    oneof union {
        Secp256k1 secp256k1 = 2;
    }
    PublicKey publicKey = 3;
}

message Ciphertext {
    message AES256GCM_HKDFSHA256 {
        bytes hkdfSalt = 1;
        bytes gcmNonce = 2;
        bytes payload = 3;
    }
    oneof union {
        AES256GCM_HKDFSHA256 aes256GcmHkdfSha256 = 1;
    }
}

message PublicKeyBundle {
  PublicKey identityKey = 1;
  PublicKey preKey = 2;
}

message MessageHeader {
  PublicKeyBundle sender = 1;
  PublicKeyBundle recipient = 2;
  uint64 timestamp = 3;
}

message Message {
    bytes headerBytes = 1; // encapsulates the encoded MessageHeader
    Ciphertext ciphertext = 2;
}

// Private Key Storage

message PrivateKeyBundle {
    PrivateKey identityKey = 1;
    repeated PrivateKey preKeys = 2;
}

message EncryptedPrivateKeyBundle {
    bytes walletPreKey = 1;
    Ciphertext ciphertext = 2;
}
